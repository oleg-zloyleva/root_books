version: '3.6'
services:

  # NodeJS Services
  nodejs:
    build: docker/nodejs
    user: 1000:1000
    working_dir: /var/www
    depends_on:
      - astixlimited_com_web
      - powerliftguru_com_web
      - fillingyoga_com_web
      - marathonexpert_com_web
      - yourdailyworkouts_com_web
      - yourfitnesstrainer365_com_web
    volumes:
      - "./api/:/var/www/api"

      - "./astixlimited.com/:/var/www/astixlimited.com/"
      - "./yourfitnesstrainer365.com/:/var/www/yourfitnesstrainer365.com/"
      - "./yourdailyworkouts.com/:/var/www/yourdailyworkouts.com/"
      - "./fillingyoga.com/:/var/www/fillingyoga.com/"
      - "./marathonexpert.com/:/var/www/marathonexpert.com/"
      - "./powerliftguru.com/:/var/www/powerliftguru.com/"


  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: "${DOCKER_PREFIX}-webserver"
    restart: unless-stopped
    depends_on:
      - astixlimited_com_web
      - powerliftguru_com_web
      - fillingyoga_com_web
      - marathonexpert_com_web
      - yourdailyworkouts_com_web
      - yourfitnesstrainer365_com_web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf

      - ./astixlimited.com/:/var/www/astixlimited.com/
      - ./astixlimited.com/docker/nginx/local.conf:/etc/nginx/conf.d/astixlimited.conf

      - ./powerliftguru.com/:/var/www/powerliftguru.com/
      - ./powerliftguru.com/docker/nginx/local.conf:/etc/nginx/conf.d/powerliftguru.conf

      - ./fillingyoga.com/:/var/www/fillingyoga.com/
      - ./fillingyoga.com/docker/nginx/local.conf:/etc/nginx/conf.d/fillingyoga.conf

      - ./marathonexpert.com/:/var/www/marathonexpert.com/
      - ./marathonexpert.com/docker/nginx/local.conf:/etc/nginx/conf.d/marathonexpert.conf

      - ./yourdailyworkouts.com/:/var/www/yourdailyworkouts.com/
      - ./yourdailyworkouts.com/docker/nginx/local.conf:/etc/nginx/conf.d/yourdailyworkouts.conf

      - ./yourfitnesstrainer365.com/:/var/www/yourfitnesstrainer365.com/
      - ./yourfitnesstrainer365.com/docker/nginx/local.conf:/etc/nginx/conf.d/yourfitnesstrainer365.conf

      - ./descriptors/:/var/www/descriptors/

#  ###############################################
#  ##############   API CONTAINERS  ##############
#  ###############################################

  #PHP Service
  app_api:
    build:
      context: .
      dockerfile: ./api/docker/php-fpm/Dockerfile.local
    image: digitalocean.com/php
    container_name: "${DOCKER_PREFIX_API}-app"
    restart: unless-stopped
    depends_on:
      - db_api
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./api/:/var/www
      - ./api/docker/php-fpm/local.ini:/usr/local/etc/php/conf.d/local.ini

  #Nginx Service
  webserver_api:
    image: nginx:alpine
    container_name: "${DOCKER_PREFIX_API}-webserver"
    restart: unless-stopped
    depends_on:
      - app_api
    ports:
      - "3000:80"
#      - "443:443"
    volumes:
      - ./api/:/var/www
      - ./api/docker/nginx/conf.d/local.conf:/etc/nginx/conf.d/default.conf

  #MySQL Service
  db_api:
    image: mysql:5.7.22
    container_name: "${DOCKER_PREFIX_API}-db"
    restart: unless-stopped
    ports:
      - "4406:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE_API}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_API}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - db_api_data:/var/lib/mysql/
      - ./api/docker/mysql/:/etc/mysql/

#Volumes
volumes:
  dbdata:
    driver: local
  db_api_data:
    driver: local
